using MQTTnet;
using MQTTnet.Client;
using MQTTnet.Client.Options;
using MQTTnet.Formatter;
using MQTTnet.Server;
using System.Security.Authentication;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.Json;

namespace Redbox_MQTT
{
    public class Root
    {
        public string? command { get; set; }
        public string? messageType { get; set; }
        public int? version { get; set; }
        public string? requestId { get; set; }
        public string? origin { get; set; }
        public payload? payload { get; set; }
        public bool? logResponse { get; set; }
        public string? sourceId { get; set; }
        public string? requestTimeUtc { get; set; }
    }

    public class payload
    {
        public string? SettingChangesRequestId { get; set; }
        public int? KioskId { get; set; }
        public int? CurrentConfigurationVersionId { get; set; }
        public string? ConfigurationVersionHash { get; set; }
        public string? requestTimeUtc { get; set; }
    }
    internal class Program
    {
        public static X509Certificate2 serverCert;
        static async Task Main(string[] args)
        {
            serverCert = new X509Certificate2("Server.pfx");

            IMqttServer mqttServer = new MqttFactory().CreateMqttServer();
            
            IMqttServerOptions options = new MqttServerOptionsBuilder()
                .WithEncryptedEndpoint()
                .WithEncryptedEndpointPort(8883)
                .WithEncryptionCertificate(serverCert)
                .WithEncryptionSslProtocol(SslProtocols.Tls12)
                .WithClientCertificate()
                .WithRemoteCertificateValidationCallback((sender, certificate, chain, sslPolicyErrors) =>
                {
                    return true;
                })
                .Build();

            await mqttServer.StartAsync(options);
            await ClientConn(mqttServer);
            Console.WriteLine("MQTT server is running on port 8883...");
            await Task.Delay(-1);
        }
        public static async Task ClientConn(IMqttServer mqttServer)
        {
            IMqttClient client = new MqttFactory().CreateMqttClient();
            MqttClientOptionsBuilderTlsParameters tlsoptions = new MqttClientOptionsBuilderTlsParameters();
            tlsoptions.AllowUntrustedCertificates = true;
            var clientoptions = new MqttFactory().CreateClientOptionsBuilder()
                .WithTcpServer("mqtt.blackant02.com", 8883)
                .WithProtocolVersion(MqttProtocolVersion.V311)
                .WithClientId("Server")
                .WithTls()
            .Build();
            await client.ConnectAsync(clientoptions);
            mqttServer.UseApplicationMessageReceivedHandler(e =>
            {
                if (e.ClientId != "Server")
                {
                    if (e.ApplicationMessage.Topic == "$aws/rules/kioskrestcall")
                    {
                        string json = Encoding.ASCII.GetString(e.ApplicationMessage.Payload);
                        Root decodejson = JsonSerializer.Deserialize<Root>(json);
                        Console.WriteLine("Executing Command: " + decodejson.command);
                        if (decodejson.command == "GetConfigChanges")
                        {
                            MqttApplicationMessage response = new MqttFactory().CreateApplicationMessageBuilder()
                            .WithTopic("redbox/kiosk/" + e.ClientId + "/command")
                            .WithPayload(Encoding.ASCII.GetBytes("\r\n{\r\n  \"command\": \"GetConfigChanges\",\r\n  \"requestType\": \"GetConfigChanges\",\r\n  \"messageType\": \"Response\",\r\n  \"requestId\": \"" + decodejson.requestId + "\",\r\n  \"payload\": {\r\n    \"StatusCode\": 200,\r\n    \"Value\": {\r\n      \"VersionIsCurrent\": false,\r\n      \"ConfigurationVersionHash\": \"0XMxI04t+oegpzS913Fz4F/km18TuPyndTzNJDw4cdygKs3o9/TGAM1oNxk4HEs5hI+Cnc5VkEoGiqWrYqdiEg==\",\r\n      \"RemoveAllExistingConfigurationSettingValues\": true,\r\n      \"OriginalConfigurationVersionId\": 0,\r\n      \"NewConfigurationSettingValues\": {\r\n        \"KioskId\": " + e.ClientId + ",\r\n        \"ConfigurationVersion\": 38,\r\n        \"Categories\": [\r\n          {\r\n            \"Name\": \"KioskClientAds\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"AdServerAPIKey\",\r\n                \"SettingId\": 20,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 72,\r\n                    \"Value\": \"(}A[;kiR+x+jnj32C\\\\\\\"7Z&PdK_eXxiTmo0hs+2INR%-sZdl2o~0E\\\\\\\\3=m#wDP-UKY\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"AdServerUrl\",\r\n                \"SettingId\": 18,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 70,\r\n                    \"Value\": \"https://adserver.kiosk.prod.redbox.com/\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"VistarAPIKey\",\r\n                \"SettingId\": 16,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 69,\r\n                    \"Value\": \"35d91994-a2d1-4186-8dd8-6ac0013f23b9\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"VistarNetworkId\",\r\n                \"SettingId\": 15,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 68,\r\n                    \"Value\": \"v3A6CJdkR0OmxxwHJZCodg\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"VistarTimeout\",\r\n                \"SettingId\": 14,\r\n                \"DataType\": \"int\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 67,\r\n                    \"Value\": \"20000\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"VistarUrl\",\r\n                \"SettingId\": 13,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 66,\r\n                    \"Value\": \"http://api.vistarmedia.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"DeviceService\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"BluefinServiceApiKey\",\r\n                \"SettingId\": 51,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 93,\r\n                    \"Value\": \"2AlwVzMTil5Shkvmndpkx7nMAFQo4rz7a7hJk8r3\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-05-31T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"BluefinServiceTimeout\",\r\n                \"SettingId\": 52,\r\n                \"DataType\": \"int\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 94,\r\n                    \"Value\": \"40000\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-05-31T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"BluefinServiceUrl\",\r\n                \"SettingId\": 50,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 92,\r\n                    \"Value\": \"https://dataservice.kiosk.prod.redbox.com/bluefinservice\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-05-31T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"MarketingWelcomeScreen\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"EnableAssetsSync\",\r\n                \"SettingId\": 7,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 48,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2022-06-28T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"Campaigns\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"InCartsActive\",\r\n                \"SettingId\": 10,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 61,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-01-31T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"JobActive\",\r\n                \"SettingId\": 9,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 62,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-01-31T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"RefreshInterval\",\r\n                \"SettingId\": 11,\r\n                \"DataType\": \"int\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 57,\r\n                    \"Value\": \"30\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-01-19T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"KioskClientDefault\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"InventoryApiKey\",\r\n                \"SettingId\": 31,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 83,\r\n                    \"Value\": \"m6xhJ5T68oSjhh5Y4zUu54v8fa9t323v8n90Ur0tT09qQgst5ROf08sW1pb23mV3\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"InventoryApiUrl\",\r\n                \"SettingId\": 29,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 82,\r\n                    \"Value\": \"https://kioskinventory.kiosk.prod.redbox.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"KioskDataServiceAPIKey\",\r\n                \"SettingId\": 24,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 75,\r\n                    \"Value\": \"Bearer d740095f-1b92-383c-a5a7-73a7a8c2adaf\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"KioskDataServiceUrl\",\r\n                \"SettingId\": 22,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 74,\r\n                    \"Value\": \"https://dataservice.kiosk.prod.redbox.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ProductGroupSortOrderType\",\r\n                \"SettingId\": 32,\r\n                \"DataType\": \"int\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 84,\r\n                    \"Value\": \"4\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ProductReelsApiTimeout\",\r\n                \"SettingId\": 27,\r\n                \"DataType\": \"int\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 80,\r\n                    \"Value\": \"100000\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ProductReelsApiUrl\",\r\n                \"SettingId\": 26,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 79,\r\n                    \"Value\": \"https://reels.product.prod.redbox.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"TransactionApiKey\",\r\n                \"SettingId\": 35,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 88,\r\n                    \"Value\": \"123Yr!x2W1VK2258x09@09Zr7o6mPumTl5@qx8VbO6g7fGgJrd8k917K9!CRQ3JFJ\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"TransactionApiUrl\",\r\n                \"SettingId\": 33,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 87,\r\n                    \"Value\": \"https://transactionservice.kiosk.prodp.redbox.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"Browse\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"LoadSortOrderProductGroups\",\r\n                \"SettingId\": 71,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 130,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-12-07T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ShowDealsBrowseFilterButton\",\r\n                \"SettingId\": 67,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 113,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-07-31T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ShowDualInStock\",\r\n                \"SettingId\": 73,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 132,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-12-07T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ShowWatchOptions\",\r\n                \"SettingId\": 70,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 133,\r\n                    \"Value\": \"true\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-12-07T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"KioskClientSubscription\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"MyBagStarzSubscriptionPlan\",\r\n                \"SettingId\": 44,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 91,\r\n                    \"Value\": \"STARZ_OFFER_4\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"KioskClientProxyApi\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"ProxyApiKey\",\r\n                \"SettingId\": 41,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 90,\r\n                    \"Value\": \"pa13CQnLTs0KwJhH9N6NXK6rzx4COEPLsfs68ZqCRE0nPKw9XozsBuxBnzC4WAAi\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"ProxyApiUrl\",\r\n                \"SettingId\": 39,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 89,\r\n                    \"Value\": \"http://proxyservice.kiosk.prod.redbox.com\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2023-02-22T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"Name\": \"Operations\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"SyncTimestamp\",\r\n                \"SettingId\": 4,\r\n                \"DataType\": \"boolean\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 37,\r\n                    \"Value\": \"false\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2022-01-01T00:00:00\"\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                \"Name\": \"TestData\",\r\n                \"Settings\": [\r\n                  {\r\n                    \"Name\": \"TestDataEnabled\",\r\n                    \"SettingValues\": [\r\n                      {\r\n                        \"Value\": \"true\",\r\n                        \"EffectiveDateTime\": \"2025-01-01T00:00:00\",\r\n                        \"ExpireDateTime\": null,\r\n                        \"Rank\": 1\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n\t\t  {\r\n\t\t\t\"Name\": \"TestData\",\r\n\t\t\t\"Settings\": [\r\n\t\t\t  {\r\n\t\t\t\t\"Name\": \"TestDataEnabled\",\r\n\t\t\t\t\"SettingValues\": [\r\n\t\t\t\t  {\r\n\t\t\t\t\t\"Value\": \"true\",\r\n\t\t\t\t\t\"EffectiveDateTime\": \"2025-01-01T00:00:00\",\r\n\t\t\t\t\t\"ExpireDateTime\": null,\r\n\t\t\t\t\t\"Rank\": 1\r\n\t\t\t\t  }\r\n\t\t\t\t]\r\n\t\t\t  }\r\n\t\t\t]\r\n\t\t  },\r\n          {\r\n            \"Name\": \"General\",\r\n            \"Settings\": [\r\n              {\r\n                \"Name\": \"TestSetting\",\r\n                \"SettingId\": 3,\r\n                \"DataType\": \"string\",\r\n                \"SettingValues\": [\r\n                  {\r\n                    \"ConfigurationSettingValueId\": 9,\r\n                    \"Value\": \"Yet another Test setting value 3/3/2022 (3)\",\r\n                    \"SegmentId\": 1,\r\n                    \"SegmentationName\": \"All\",\r\n                    \"Rank\": 0,\r\n                    \"EffectiveDateTime\": \"2022-02-09T00:00:00\"\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"Formatters\": [],\r\n    \"ContentTypes\": []\r\n  },\r\n  \"logResponse\": false,\r\n  \"version\": 1,\r\n  \"sourceId\": \"us:3ddd8a1e-3e55-43db-9ec5-6fc34046026e\",\r\n  \"kioskId\": \"us:3ddd8a1e-3e55-43db-9ec5-6fc34046026e\"\r\n}"))
                            .Build();
                            client.PublishAsync(response);
                        }    
                        else if (decodejson.command == "SyncTimestampAndTimezone")
                        {
                            MqttApplicationMessage response = new MqttFactory().CreateApplicationMessageBuilder()
                            .WithTopic("redbox/kiosk/" + e.ClientId + "/command")
                            .WithPayload(Encoding.ASCII.GetBytes("{\r\n  \"command\": \"SyncTimestampAndTimezone\",\r\n  \"requestType\": \"SyncTimestampAndTimezone\",\r\n  \"messageType\": \"Request\",\r\n  \"requestId\": \"" + decodejson.requestId + "\",\r\n  \"payload\": {\r\n    \"UtcTimestamp\": \"" + DateTime.UtcNow.ToString("O") + "\"\r\n  },\r\n  \"version\": 1,\r\n  \"sourceId\": \"us:c284e932-d805-4565-b9b6-5c832565cf74\",\r\n  \"kioskId\": \"us:c284e932-d805-4565-b9b6-5c832565cf74\"\r\n}"))
                            .Build();
                            client.PublishAsync(response);
                        }    
                        else if (decodejson.command == "ActivateConfigVersion")
                        {
                            MqttApplicationMessage response = new MqttFactory().CreateApplicationMessageBuilder()
                            .WithTopic("redbox/kiosk/" + e.ClientId + "/command")
                            .WithPayload(Encoding.ASCII.GetBytes("{\r\n  \"command\": \"ActivateConfigVersion\",\r\n  \"requestType\": \"ActivateConfigVersion\",\r\n  \"messageType\": \"Response\",\r\n  \"requestId\": \"" + decodejson.requestId + "\",\r\n  \"payload\": {\r\n    \"Value\": {},\r\n    \"Formatters\": [],\r\n    \"ContentTypes\": [],\r\n    \"StatusCode\": 200\r\n  },\r\n  \"version\": 1,\r\n  \"sourceId\": \"us:64ec0e97-b530-4221-8b52-501678bb30af\",\r\n  \"kioskId\": \"us:64ec0e97-b530-4221-8b52-501678bb30af\"\r\n}"))
                            .Build();
                            client.PublishAsync(response);
                        }    
                    }
                }
            });
        }
    }
}
